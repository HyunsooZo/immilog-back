import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    // JdbcClient
    implementation 'org.springframework:spring-jdbc'

    // MySQL connector
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Testing libraries
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // Lombok for code generation
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT (JSON Web Token) for authentication
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // AWS SDK for S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.261'

    // Thymeleaf template engine
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // OpenAPI/Swagger for API documentation (springdoc)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Jakarta JSON API
    implementation 'jakarta.json:jakarta.json-api:2.1.2'
    implementation 'org.glassfish:jakarta.json:2.0.1'
    implementation 'org.eclipse.parsson:parsson:1.1.3'

    // Kotlin dependencies: 버전 없이 지정하면 플러그인 버전과 맞춰줌
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}

def generatedDir = "$buildDir/main/generated"

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-parameters'
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "21"
    }
}

clean {
    delete file(generatedDir)
}
